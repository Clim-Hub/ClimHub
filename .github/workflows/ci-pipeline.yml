name: CI / Release Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write # required so tags and releases can be pushed

jobs:
  versioning:
    name: Automatic Semantic Versioning
    runs-on: ubuntu-latest
    outputs:
      # git-auto-semver v2 exposes `version-string`
      version: ${{ steps.semver.outputs.version-string }}
      tag: ${{ steps.semver.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history and tags
          fetch-tags: true

      - name: Run Git Automatic Semantic Versioning
        id: semver
        # Run on both push and pull_request, but only create a tag for pushes
        uses: bitshifted/git-auto-semver@v2
        with:
          create_tag: ${{ github.event_name == 'push' }}
          initial_version: 0.1.0 # sets first version if no tags exist

      - name: Display computed version
        run: |
          echo "Computed version: ${{ steps.semver.outputs['version-string'] }}"
          echo "Tag: ${{ steps.semver.outputs.tag }}"

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up environment / dependencies
        run: |
          # install dependencies, etc.
          echo "Doing build setup..."

      - name: Run tests
        run: |
          # run your test suite
          echo "Running tests..."

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: versioning
    # only create a release on pushes and when a version was produced
    if: ${{ github.event_name == 'push' && needs.versioning.outputs.version != '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          # prefix 'v' if you want v1.2.3 tags; adjust if your action already includes the v
          tag_name: v${{ needs.versioning.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # Example placeholder for future custom actions or deploy jobs
  deploy:
    name: Deploy Server (future)
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.versioning.outputs.tag != '' }}
    steps:
      - name: Placeholder deploy
        run: echo "Deploying version ${{ needs.versioning.outputs.version }}..."

  # Placeholder for future custom actions
  custom-step:
    name: Custom Action Job
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run custom action
        run: |
          echo "No custom action configured. Skipping."
